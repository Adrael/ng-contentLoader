!function(){"use strict";function t(t,n){t.$on("$viewContentLoaded",function(){if(n.content.length>0)if(n.url)n.fetch();else{var t="[$contentLoader] Warning: No URL set to retrieve content from.\nYou may want to use $contentLoader.setURL([yourURLhere]);";console.error(t)}})}function n(t){function n(t){i.url=t}function e(t){i.$scope=t}function o(){i.content=[]}function c(){var n=$(".content-loader-container");n.hide();for(var e="",c=0;c<i.content.length;++c)e+=i.content[c].attrs.contentLoader+",";e=e.substr(0,e.length-2);var a=function(t){for(var e in t)if(t.hasOwnProperty(e))for(var c=0;c<i.content.length;++c)if(i.content[c].attrs.contentLoader===e){if(i.content[c].callback(t[e]),i.content[c].attrs.contentReady)if(i.$scope)i.$scope.$eval(i.content[c].attrs.contentReady);else{var a="[$contentLoader] Warning: No scope set to execute readiness callback for "+i.content[c].attrs.contentLoader+".\nYou may want to use $contentLoader.setScope([yourScopeHere]);";console.error(a)}break}i.finalCallback&&i.finalCallback(),n.show(),o()},r=function(){console.error("[$contentLoader] Cannot retrieve payload with content:",i.url,i.content),i.finalCallback&&i.finalCallback(),o()};t.get(i.url+"?payload="+e).success(a).error(r)}function a(t){i.content.push(t)}function r(t){i.finalCallback=t}function l(){$("[data-content-loader]").each(function(t,n){function e(t){$(n).text(t)}var o={attrs:{contentReady:$(n).data("content-ready"),contentLoader:$(n).data("content-loader")},callback:e};a(o)}),c()}var i={url:null,content:[],finalCallback:null,reset:o,fetch:c,setURL:n,setScope:e,addContent:a,forceFetch:l,setFinalCallback:r};return i}function e(t){return{restrict:"A",link:function(n,e,o){function c(t){e.text(t)}var a={attrs:o,callback:c};t.addContent(a)}}}angular.module("contentLoader",[]).run(t).service("$contentLoader",n).directive("contentLoader",e),e.$inject=["$contentLoader"],t.$inject=["$rootScope","$contentLoader"],n.$inject=["$http","$rootScope"]}();